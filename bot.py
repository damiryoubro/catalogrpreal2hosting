import discord
from discord.ext import commands
from discord.ui import Button, View, Modal, TextInput
from discord import app_commands
import random
import os
import webserver

intents = discord.Intents.default()
intents.message_content = True
intents.guilds = True
intents.members = True

bot = commands.Bot(command_prefix='/', intents=intents)

# IDs and roles configuration
target_user_id = 1090165956363440148
channel_id = 1279210989388042251  # Channel for buttons
channel_id2 = 1278720207040548874
excluded_channel_id = 1278720873863581778  # Excluded channel
role_ids = [1278818590220353617, 1278818223462285437, 1278805002105782403]  # Roles that can press buttons

# Modal for application forms
class ApplicationModal(Modal):
    def __init__(self, title, fields, target_user_id, author_id):
        super().__init__(title=title)
        self.target_user_id = target_user_id
        self.author_id = author_id
        for label, placeholder, max_length in fields:
            self.add_item(TextInput(label=label, placeholder=placeholder, max_length=max_length))

    async def on_submit(self, interaction: discord.Interaction):
        form_data = f"<@{self.target_user_id}> –ù–æ–≤–∞—è —Ñ–æ—Ä–º–∞ –Ω–∞ {self.title} –æ—Ç <@{self.author_id}>\n"
        for item in self.children:
            form_data += f"**{item.label}:** {item.value}\n"
        user = bot.get_user(self.target_user_id)
        if user:
            await user.send(form_data)
        await interaction.response.send_message("–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!", ephemeral=True)

# Modal for response handling
class ResponseModal(Modal):
    def __init__(self, title, label, placeholder, question, user_id, embed, message, color, response_label):
        super().__init__(title=title)
        self.label = label
        self.question = question
        self.user_id = user_id
        self.embed = embed
        self.message = message
        self.color = color
        self.response_label = response_label
        self.add_item(TextInput(label=label, placeholder=placeholder, max_length=2000))

    async def on_submit(self, interaction: discord.Interaction):
        response_text = self.children[0].value
        self.embed.color = self.color
        self.embed.add_field(name=self.response_label, value=response_text, inline=False)
        await self.message.edit(embed=self.embed)
        await interaction.response.send_message("–û—Ç–≤–µ—Ç –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω.", ephemeral=True)

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user.name}')
    print('Bot is ready and online.')

    # Sync commands
    try:
        await bot.tree.sync()
        print("–ö–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–Ω–æ–ø–æ–∫
@bot.tree.command(name='–Ω–∞–±–æ—Ä', description='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ')
async def button_command(interaction: discord.Interaction):
    view = View()
    button1 = Button(label="„Ääüì±„Äã–ü–∏–∞—Ä –ú–µ–Ω–µ–¥–∂–µ—Ä", style=discord.ButtonStyle.primary)
    button2 = Button(label="„ÄäüçÄ„Äã–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", style=discord.ButtonStyle.secondary)

    async def button1_callback(interaction):
        fields = [
            ("–ò–º—è", "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è", 100),
            ("–í–æ–∑—Ä–∞—Å—Ç", "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç", 3),
            ("–ê–∫—Ç–∏–≤ –≤ –¥–µ–Ω—å", "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–º–µ—Ä–Ω—ã–π –∞–∫—Ç–∏–≤", 100),
            ("–û–∑–Ω–∞–∫–æ–º–ª–µ–Ω—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏?", "–î–∞/–ù–µ—Ç", 3),
        ]
        modal = ApplicationModal("–ó–∞—è–≤–∫–∞ –Ω–∞ –ü–∏–∞—Ä –ú–µ–Ω–µ–¥–∂–µ—Ä–∞", fields, target_user_id, interaction.user.id)
        await interaction.response.send_modal(modal)

    async def button2_callback(interaction):
        fields = [
            ("–ò–º—è", "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è", 100),
            ("–í–æ–∑—Ä–∞—Å—Ç", "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç", 3),
            ("–ê–∫—Ç–∏–≤ –≤ –¥–µ–Ω—å", "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–º–µ—Ä–Ω—ã–π –∞–∫—Ç–∏–≤", 100),
            ("–û–∑–Ω–∞–∫–æ–º–ª–µ–Ω—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏?", "–î–∞/–ù–µ—Ç", 3),
            ("–ì–æ—Ç–æ–≤—ã –ø—Ä–æ–π—Ç–∏ –æ–±–∑–≤–æ–Ω?", "–î–∞/–ù–µ—Ç", 3),
        ]
        modal = ApplicationModal("–ó–∞—è–≤–∫–∞ –Ω–∞ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞", fields, target_user_id, interaction.user.id)
        await interaction.response.send_modal(modal)

    button1.callback = button1_callback
    button2.callback = button2_callback

    view.add_item(button1)
    view.add_item(button2)

    await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", view=view)


@bot.event
async def on_message(message: discord.Message):
    if message.author == bot.user:
        return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Å–∞–º–∏–º –±–æ—Ç–æ–º

    if message.channel.id == channel_id:
        await message.delete()

        embed = discord.Embed(title="–í–æ–ø—Ä–æ—Å:", description=message.content, color=discord.Color.blurple())
        view = View()

        async def respond_callback(interaction):
            if any(role.id in role_ids for role in interaction.user.roles):
                modal = ResponseModal("–û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å", "–û—Ç–≤–µ—Ç", "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç...",
                                      message.content, message.author.id, embed,
                                      interaction.message, discord.Color.green(), "–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏:")
                await interaction.response.send_modal(modal)
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await interaction.channel.send(f"{message.author.mention} –í–∞—à –≤–æ–ø—Ä–æ—Å –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω.")
            else:
                await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.", ephemeral=True)

        async def reject_callback(interaction):
            if any(role.id in role_ids for role in interaction.user.roles):
                modal = ResponseModal("–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–∞–∑–∞", "–ü—Ä–∏—á–∏–Ω–∞", "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–∞–∑–∞...",
                                      message.content, message.author.id, embed,
                                      interaction.message, discord.Color.red(),
                                      "–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏: –í–æ–ø—Ä–æ—Å –æ—Ç–∫–∞–∑–∞–Ω –ø–æ –ø—Ä–∏—á–∏–Ω–µ:")
                await interaction.response.send_modal(modal)
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await interaction.channel.send(f"{message.author.mention} –í–∞—à –≤–æ–ø—Ä–æ—Å –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω.")
            else:
                await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.", ephemeral=True)

        button1 = Button(label="–û—Ç–≤–µ—Ç–∏—Ç—å", style=discord.ButtonStyle.success)
        button2 = Button(label="–û—Ç–∫–∞–∑–∞—Ç—å", style=discord.ButtonStyle.danger)

        button1.callback = respond_callback
        button2.callback = reject_callback

        view.add_item(button1)
        view.add_item(button2)

        await message.channel.send(embed=embed, view=view)

    elif message.channel.id == channel_id2:
        await message.delete()

        embed = discord.Embed(title="–ò–¥–µ—è:", description=message.content, color=discord.Color.blurple())
        view = View()

        async def respond_callback(interaction):
            if any(role.id in role_ids for role in interaction.user.roles):
                modal = ResponseModal("–û—Ç–≤–µ—Ç –Ω–∞ –∏–¥–µ—é", "–û—Ç–≤–µ—Ç", "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç...",
                                      message.content, message.author.id, embed,
                                      interaction.message, discord.Color.green(), "–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏:")
                await interaction.response.send_modal(modal)
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await interaction.channel.send(f"{message.author.mention} –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à—É –∏–¥–µ—é –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω.")
            else:
                await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.", ephemeral=True)

        button1 = Button(label="–û—Ç–≤–µ—Ç–∏—Ç—å", style=discord.ButtonStyle.success)
        button1.callback = respond_callback
        view.add_item(button1)

        await message.channel.send(embed=embed, view=view)

    await bot.process_commands(message)  # –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ, —á—Ç–æ–±—ã –±–æ—Ç —Ç–∞–∫–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª –∫–æ–º–∞–Ω–¥—ã


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ—Ä–º—ã –∂–∞–ª–æ–±—ã
@bot.tree.command(name='–∂–∞–ª–æ–±—ã', description='–°–æ–∑–¥–∞–π—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è –ø–æ–¥–∞—á–∏ –∂–∞–ª–æ–±—ã.')
async def complaints_command(interaction: discord.Interaction):
    view = View()
    complaint_button = Button(label="–ñ–∞–ª–æ–±—ã", style=discord.ButtonStyle.primary)

    async def complaint_button_callback(interaction):
        fields = [
            ("–¢–∏–ø –∂–∞–ª–æ–±—ã", "–ñ–∞–ª–æ–±–∞ –Ω–∞ –°–µ—Ä–≤–µ—Ä –∏–ª–∏ –∏–≥—Ä–æ–∫–∞?", 45),
            ("ID", "ID —Å–µ—Ä–≤–µ—Ä–∞,ID –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è –∏–ª–∏ –Ω–∏–∫ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è/–æ–≤–Ω–µ—Ä–∞ —Å–µ—Ä–≤–µ—Ä–∞", 45),
            ("–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è", "–û–ø–∏—à–∏—Ç–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ", 1000),
            ("–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞", "–°—Å—ã–ª–∫–∞ –Ω–∞ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ imgur –∏–ª–∏ cdn.discordapp –∏ —Ç.–¥", 500)
        ]
        modal = ApplicationModal("–ñ–∞–ª–æ–±–∞", fields, target_user_id, interaction.user.id)
        await interaction.response.send_modal(modal)

    complaint_button.callback = complaint_button_callback
    view.add_item(complaint_button)

    await interaction.response.send_message("–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É:", view=view)

@bot.tree.command(name='embed', description='–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Å—Ç–æ–π embed —Å —Ü–≤–µ—Ç–æ–º, –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º.')
async def embed_command(interaction: discord.Interaction, channel: discord.TextChannel, color: str, title: str, *, description: str):
    try:
        color = discord.Color(int(color.strip("#"), 16))
    except ValueError:
        await interaction.response.send_message("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ü–≤–µ—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω—ã–π –∫–æ–¥ —Ü–≤–µ—Ç–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, #ff5733.", ephemeral=True)
        return

    embed = discord.Embed(
        title=title,
        description=description,
        color=color
    )
    await channel.send(embed=embed)
    await interaction.response.send_message(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª {channel.mention}", ephemeral=True)

@bot.tree.command(name='roll', description='–ë—Ä–æ—Å—å—Ç–µ –∫–æ—Å—Ç—å –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ª—É—á–∞–π–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞.')
@app_commands.describe(input="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –∏–ª–∏ —Å–ø–∏—Å–æ–∫ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é")
async def roll_command(interaction: discord.Interaction, *, input: str):
    try:
        max_number = int(input)
        result = random.randint(1, max_number)
        await interaction.response.send_message(f"–í—ã–ø–∞–ª–æ: {result} –∏–∑ {max_number}")
    except ValueError:
        options = [item.strip() for item in input.split(",")]
        result = random.choice(options)
        await interaction.response.send_message(f"–í—ã–±—Ä–∞–Ω–æ: {result}")




# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.tree.command(name='clear', description='–û—á–∏—Å—Ç–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ç–µ–∫—É—â–µ–º –∫–∞–Ω–∞–ª–µ.')
@app_commands.describe(amount="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
async def clear_command(interaction: discord.Interaction, amount: int):
    if amount < 1:
        await interaction.response.send_message("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0.", ephemeral=True)
        return

    deleted = await interaction.channel.purge(limit=amount)
    await interaction.response.send_message(f"–£–¥–∞–ª–µ–Ω–æ {len(deleted)} —Å–æ–æ–±—â–µ–Ω–∏–π.", ephemeral=True)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.tree.command(name='–ø–µ—Ä–≤—ã–π', description='–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞.')
@app_commands.describe(users="–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é")
async def first_command(interaction: discord.Interaction, *, users: str):
    user_list = [user.strip() for user in users.split(",")]
    if user_list:
        await interaction.response.send_message(f"–ü–µ—Ä–≤—ã–π: {user_list[0]}")
    else:
        await interaction.response.send_message("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç.", ephemeral=True)

webserver.keep_alive()

bot_token = os.getenv('BOT_TOKEN')
bot.run(bot_token)